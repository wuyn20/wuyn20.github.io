[{"title":"随想","date":"2022-11-11T09:11:58.000Z","url":"/2022/11/11/draft/","tags":[["喵言喵语","/tags/%E5%96%B5%E8%A8%80%E5%96%B5%E8%AF%AD/"]],"categories":[[" ",""]]},{"title":"C++学习记录","date":"2022-11-07T05:13:59.000Z","url":"/2022/11/07/Cpp%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%BC%96%E7%A8%8B/","categories":[["码农喵","/categories/%E7%A0%81%E5%86%9C%E5%96%B5/"]],"content":"C++ 面向过程因为已经学习过C语言了，这里主要记录C++和C语言的不同之处。 输入输出流cin和cout函数的基本用法没有什么好说的，注意区分一下尖括号的方向。 cin读取内容时会在空格，回车，tab处停止，不读取；如果希望读取这些内容的话，考虑使用getline读取整行字符串。 输出方面，个人认为cout不如printf在特定位置填入变量方便，不过也有自己的特点。要实现左右对齐，填充之类的功能的话，需要引用iomanip库，其中常用的函数有： 需要注意的是，一旦设定了填充字符，之后的输出流都会默认用同样的格式输出，要恢复原来的话还得再设定一次。 字符串C语言的字符串把我搞得很痛苦…谢天谢地，好在C++有了字符串的专用变量string以及它自己的同名库，处理问题可以轻松不少。不需要先动态分配内存了，开心。不过同样需要注意字符串末尾的’\\0’不能忽略。但是strlen这样的函数是不会实际考虑末尾’\\0’的存在的，它返回的是有效元素的个数（考虑空格）。 另外还有一个向量函数vector也很有意思，可以实现一边读取一边存储的功能。优点是省事，缺点就是运行太慢太占内存了…至少OJ题是不允许引用的实际上。这样来说可能不如自己写函数实现。 浮点数的判断问题浮点数不能直接用等号进行判断（这个问题C语言也要注意的吧，不过本人已经忘记是否遇到过了…）。用相减之后等于0来判断。 new与delete这个感觉有点像C语言里的动态分配内存并释放的情况。特别记录一下： new创建的指针需要delete来释放，也就是说它们俩一定是成双成对的。和C语言的malloc与free真的很像~ c++ 面向对象参考教程 类&amp;对象C++类的定义 public是可以在外部访问的，private是只能内部访问；如果不明确写，默认创建为private变量。 对象的定义根据类来创建，类似于普通变量的声明。 .号可以访问对象的公共数据成员。 类成员函数定义和原型写在类定义内部的函数，是类的一个成员，可以访问对象内的其他所有成员。 也可以在类的外部定义，不过注意写法： ::叫做范围解析运算符。如果是调用成员函数，那就和调用其他成员一样，用点运算符。 类访问修饰符 public 程序中类的外部也可以访问，不需要成员函数就能设置和获取它的值。 private 类的成员会默认假定为private，在外部不可访问，甚至不可查看。但是，我们可以在类外部定义成员函数，通过成员函数访问private变量。 实际操作中，一般在私有区域定义数据，在公有区域定义相关函数。 protected protected与private相似，不过在派生类（子类）中是可以访问的。具体内容稍后提及。 关于继承 一喵的凝视暂时不懂，之后补上。 构造函数与类完全同名，用于为某些成员变量设置初始值，在创建类的新对象时执行。 也可以让构造函数带参数,在构造对象时就会给对象赋初始值： 用初始化列表来初始化字段： 当有多个字段需要初始化时，用,进行分隔。 析构函数在删除所创建的对象时执行。名称与类完全相同，知识加~作为前缀。不返回任何值，也不带任何参数。有助于释放资源。 拷贝构造函数 一喵的凝视还没太明白这个高级操作。。。 友元函数一喵的凝视qwq C++ 高级教程文件和流打开文件实现文件读写的方法 需要使用函数库。void open(const char *filename, ios::openmode mode);和C语言的fprintf类似，模式有多种： ios::app 追加到文件末尾 ios::ate 定位到文件末尾 ios::in 用于读取文件 ios::out 用于写入 ios::trunc 文件如果已存在，内容将在打开文件之前被截断，即把文件长度设为0 多种模式可以结合使用，中间用|分隔。 关闭文件void close(); 写入与读取与cin，cout函数写法类似，只是这里用的是ofstream，ifstream（fstream）的对象。 文件位置指针seekg和seekp，可以从开头也可以从末尾开始定位。 异常处理动态内存命名空间用于处理同名函数冲突的情况，用于区别相同名称的函数、类、变量。就像不同文件夹下可以有同名文件一样。 定义命名空间 调用命名空间内的函数需要::访问。 using指令 指定调用的命名空间，之后访问就不需要::了。 指定特定命名空间内的特定函数，如：using std::cout; 不连续的命名空间嵌套的命名空间 当有全局变量和命名空间内的局部变量冲突时，全局变量需写为::a，否则会出现编译错误。 一喵的凝视暂时不懂，之后补上。 模板多线程多任务处理的一种特殊形式。允许电脑同时运行两个及两个以上程序。 基于进程的多任务处理是程序的并非执行。 基于线程的多任务处理是同一程序的片段的并发执行。 一喵的凝视没太懂？？？ 创建线程 关于参数的说明： thread:指向线程标识符指针 attr:一个不透明的属性对象，可以被用来设置线程属性 start_routine:线程运行函数起始地址，一旦线程被创建就会执行。 arg:运行函数的参数。必须通过把引用作为指针强制转换为void类型进行传递（什么鬼啊？）。如果没有传递参数，则使用NULL。 终止线程 显式地退出一个线程。"},{"title":"社会公平与机会平等","date":"2022-11-07T05:07:14.000Z","url":"/2022/11/07/%E7%A4%BE%E4%BC%9A%E5%85%AC%E5%B9%B3%E4%B8%8E%E6%9C%BA%E4%BC%9A%E5%B9%B3%E7%AD%89/","categories":[[" ",""]]},{"title":"C++debug记录","date":"2022-11-07T02:52:44.000Z","url":"/2022/11/07/C-debug%E8%AE%B0%E5%BD%95/","tags":[["debug血泪史","/tags/debug%E8%A1%80%E6%B3%AA%E5%8F%B2/"],["C/C++/C#","/tags/C-C-C/"]],"categories":[["码农喵","/categories/%E7%A0%81%E5%86%9C%E5%96%B5/"]],"content":"2022年秋季学期程序设计基础字符串字符串快变成我的噩梦了orz… 不定长字符串的处理 2440 基于奇偶位置的字符串转换研究 题目描述：给定字符串，将其中的奇数位的字母改为大写（如果是字母且是小写的话），偶数位的数字改为它的后继（如果该位是数字的话。数字9的后续是数字0，0的后续是1，1的是2 ….），最后输出结果。 输入为一个字符串（字符串长度小于1000）。输出为按照题目要求转换后的字符串。 做题思路*这道题目乍一看不算很难，由于这个字符串的输入大小不确定，所以一开始考虑了使用vector向量，输入的时候处理了再push_back一下，好像就没问题了呢~ 然后，然后就时间超限了orz 后来发现，vector虽然省事，但是速度很慢，内存占用也大…对于这道题目不太合适。所以之后改用直接输入字符串，利用字符指针进行处理。 算法效率与数据溢出组合数算法的优化这个问题思考了很久，很值得记录一下。 放上题目： 1770 猴子跳台阶 题目描述：一个顽猴在一座有N级台阶的小山上爬山跳跃，猴子上山一步可跳x级或跳y级，试求猴子上山到N级台阶有多少种不同的爬法？猴子从山脚开始跳，可认为是第0阶。 输入为三个正整数N,X,Y，用空格隔开（x &lt;&#x3D; y &lt;&#x3D; N &lt;&#x3D; 100）。 输出为猴子上山到第N级台阶有多少种不同的爬法,如果不能到达则输出“sorry”。 注释：保证最终答案不超过int范围。 一开始觉得不太难，既然是台阶爬法，最主要其实和X，Y两种步数的排列方式有关，也就是要用组合数了。至于X&#x3D;Y的情况则另作讨论。 我的大致思路就是：假定猴子爬了i次Y步（用Y减比较省循环次数），再考虑剩余的N-ixY是否为X的倍数，如果是的话，就用组合数算法把次数求出来。注意(N-i*Y)&#x2F;X和i谁大谁小是不确定的，所以需要先比较一下再确定组合数怎么写。 可以说是高中经典组合题目了。 输入输出姑且不提，组合数应该如何去实现？ 首先想到的自然就是：按照组合数的公式，先写个阶乘的函数，再代入进去。逻辑上没有什么问题，于是我提交上oj，发现错得惨烈。。。然后用visual studio debug的时候意识到一个问题，阶乘增长的太快了，它超过int的取值范围了啊。如果台阶数是100级的话，计算机在第一次运算到组合数的时候就阵亡了orz。于是优化了一下，利用组合数的性质：**C(n, m)&#x3D;C(n-1,m-1)+C(n-1,m)，用递归去实现，而且C(n, m)&#x3D;C(n, n-m)**，所以可以加快计算过程。不过缺点就是在小数目上计算得比原来慢很多。 另外，意识到结果会很大以后，就把最后输出的结果sum改成了long long int类型，网上有说输出long long int需要用printf函数，不过我用cin提交的也没出什么问题，电脑上也可以正常输出的。 在debug的过程中意外看到另一种思路，其实就是把组合数函数的递归用得更彻底了，每次爬N级台阶的次数其实就等于爬N-X和N-Y级台阶的次数之和，如果X&#x3D;1，Y&#x3D;2，就是我们熟悉的斐波那契数列了。这种方法的有点在于避开了阶乘或者组合数，不用担心中途数据溢出的情况，不过算法也确实比较慢，反正我的电脑运行不了100级台阶的极端情况，不过OJ上提交无误。 放上最后这种的实现方法： 这道题给我最大的印象就是数据较大情况下如何优化的问题吧。这里体现的基本思路有3个：一是扩大变量的存储，所谓开源；二是优化算法，尽量避免大数据的出现，比如阶乘这种函数就过于暴力了…所谓“节流”；三最精妙，直接转换赛道，用时间换空间，比如拼命想着挤出组合数的空间，不如干脆不要它，另起炉灶，哈哈。"},{"title":"女权二三事","date":"2022-10-25T07:47:03.000Z","url":"/2022/10/25/%E5%A5%B3%E6%9D%83%E4%BA%8C%E4%B8%89%E4%BA%8B/","categories":[[" ",""]]},{"title":"从零开始的图像分析与建模实验","date":"2022-10-22T14:17:28.000Z","url":"/2022/10/22/%E6%8C%91%E6%88%98%E6%9D%AF%E8%AF%BE%E9%A2%98%E8%BF%9B%E7%A8%8B%E8%AE%B0%E5%BD%95/","tags":[["挑战杯","/tags/%E6%8C%91%E6%88%98%E6%9D%AF/"]],"categories":[["码农喵","/categories/%E7%A0%81%E5%86%9C%E5%96%B5/"]],"content":"  本文已隐藏，请输入密码 "},{"title":"Linux常用指令记录","date":"2022-10-22T08:22:26.000Z","url":"/2022/10/22/Linux%E6%8C%87%E4%BB%A4/","tags":[["Linux/Ubuntu","/tags/Linux-Ubuntu/"]],"categories":[["码农喵","/categories/%E7%A0%81%E5%86%9C%E5%96%B5/"]],"content":"参考教程 内容太多了，一时记不住啊啊啊，先写下来qwq vi&#x2F;vim快捷键 三种模式 正常模式 可以用上下左右键移动光标，删除字符或删除整行；可以复制粘贴、 插入&#x2F;编辑模式 命令行模式 提供指令，完成读取、存盘、替换、离开vim、显示行号等动作 各模式切换 命令行输入vim * 进入一般模式 一般模式输入i或a，进入插入模式 一般模式输入：或&#x2F;，进入命令模式 输入esc，返回一般模式 正常模式相关操作拷贝粘贴 yy 拷贝 5yy 拷贝当前行向下的五行 注意不要用小键盘输入行号，会进入插入模式 p 粘贴 删除 dd 4dd 删除当前行向下的四行 文首&#x2F;文末 gg 文档首行 G 文档末尾 撤销 u 光标定位 行号 shift+g 注意不要用小键盘输入行号 插入模式命令模式相关操作退出 :wq 保存退出 :q 退出 :q! 强制退出，不保存 查找 &#x2F;*** 查找单词 n向下查找 文件行号 :set nu :set nonu 基础部分指定运行级别 关机 单用户 多用户状态没有网络服务 多用户状态有网络服务 系统未使用保留给用户 图形界面 系统重启 常用运行级别为3和5，也可以指定默认运行级别。 tab键指令自动补全，按两次，显示所有可能指令 上下方向键使用历史中用过的指令，按一次向上键返回上一条，向下键返回下一条 复制与粘贴区别于windows系统 shift+Ctrl+C 和 shift+Ctrl+V Ctrl+C 强制终止命令执行一级指令，无论何时都能够使用 注意区分于复制！ 关机与重启shutdown 关机 -h halt立刻关机 -h n分钟 n分组后关机 -r 现在重启 halt 关机reboot 重新启动sync 内存数据同步到磁盘先sync再关机 用户登录与注销root账号 系统管理员，具有最大的权限 普通用户登录 su - root切换成管理员身份 sudo指令 获得临时root权限 logout 注销用户 在运行级别3下有效，在图形运行级别无效 用户管理添加用户 useradd 用户名 默认家目录为&#x2F;home&#x2F;用户名 useradd -d 指定目录 用户名 useradd -d /home/test king 指定&#x2F;修改密码 passwd 用户名 删除用户 userdel 用户名 家目录保留，用户删除 userdel -r 用户名 把用户和用户家目录都删除 查询用户信息指令 id 用户名 显示用户id和组id 切换用户 su - 切换用户名 su root 切换了用户但是shell环境不变，建议大多数情况下使用su - root 从权限高的用户切换至权限低的用户时不需要输入密码 查看当前用户&#x2F;登录用户 whoami&#x2F; who am i 显示第一次登录的用户信息，不受用户切换影响 用户组 groupadd 组名 新增组 groupdel 组名 删除组 useradd -g 用户组 用户名 当不设置用户组时，用户会默认放在与之同名的组中 usermod -g 用户组 用户名 相关配置文件 &#x2F;etc&#x2F;passwd 用户的配置文件，记录用户的各种信息 用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell(bash) &#x2F;etc&#x2F;shadow 口令的配置文件 &#x2F;etc&#x2F;group 组的配置文件，记录linux包含的组的信息 帮助指令man获得具体指令的帮助信息 空格退出 man ls help获得shell内置命令的帮助信息，英文显示 help cd 文件目录类pwd 显示文件的绝对路径ls 文件信息显示 -a 列出所有文件，包括以.开头的隐藏文件 -l 单列显示 -h human以人类方便理解的方式显示 选项可以组合使用 cd 定位绝对或相对路径cd ..回到上一级目录 cd ~或者cd回到家目录 绝对路径：cd /root 切换到root目录位置 相对路径：cd ../../root mkdir 创建目录一级目录：mkdir /home/wuyn20 一次性创建多级目录：mkdir -p /home/wuyn20/linux rmdir 删除目录rmdir /home/wuyn20/linux 删除空目录 rm -rf /home/wuyn20 强制删除 -f慎重使用！ touch 创建文件touch hello.txt cp 拷贝cp [选项] 源 目标目录 cp hello.txt /home/wuyn20/linux 拷贝单个文件 cp -r /home/wuyn20 /new 递归拷贝整个文件夹 \\cp -r /home/wuyn20 /new 强制覆盖不提示 rm 移除rm hello.txt 删除单个文件 rm -r /home/wuyn20/linux 递归删除整个文件夹 rm -f /home/wuyn20/linux 强制删除不提示 mv 移动或重命名mv oldNmaeFile newNameFile 重命名 mv /temp/movefile /targetFolder 移动、剪切文件 mv hello.txt /home/wuyn20/linux/test.txt 移动并且重命名 mv /new /home/wuyn20/linux 移动文件夹，如果linux不存在就是移动并且重命名了 cat 查看文件内容cat hello.txt -n显示行号 加上管道命令 |more 将前面得到的结果交给下一个命令进行处理 cat -n /home/wuyn20/linux/test.txt | more 后续进行交互 more 文件查看命令 space空格 向下翻页 enter 向下翻一行 q 立刻离开more，不再显示该文件内容 Ctrl+F 向下滚动一屏 Ctrl+B 返回上一屏 &#x3D;输出当前行的行号 :f 输出文件名和当前行行号 more -n /test.txt less 分屏查看文件内容 空白键&#x2F;pagedown 向下翻页 pageup 向上翻页 &#x2F;字串 或 ？字串 搜索功能 n向下 N向上 q 离开less程序 less /test.txt clear&#x2F;Ctrl+L 清屏echo 输出内容到控制台echo $PATH $HOSTNAME 输出环境变量echo &quot;Hello World&quot; head 显示文件开头部分默认显示文件前十行head -n 5 test.txt 查看文件的前五行代码 tail 显示文件尾部内容默认显示末尾十行tail -n 5 test.txt 查看最后五行tail -f test.txt 实时追踪文件更新 &gt;输出重定向 和 &gt;&gt;追加echo &quot;hello&quot; &gt; /home/mydate.txt 覆盖原先内容echo &quot;world&quot; &gt;&gt; /home/mydate.txt 追加内容到文件末尾ls -l /home &gt; /home/info.txt 列表内容写入文件，如果文件不存在，则创建ls -al /home &gt;&gt; /home/info.txt 列表内容追加到文件中cat linux.txt &gt; newfile.txt 文件内容覆盖到另一文件 ln 软链接，符号链接（快捷方式）ln -s /root/ myroot 在home目录创建软链接，指向root ls -ll myroot 对myroot软链接进行信息显示，内容和root相同 rm /home/myroot 删除和删除文件的操作相同 history 查看已经执行过的命令默认所有的指令 history 10 显示最近使用过的10个指令 !5 执行历史编号为5的指令 时间日期类指令date 显示当前日期date 显示当前时间 date +%Y 显示当前年份 date +%m 显示当前月份 date +%d 显示当前日子 date &quot;+%Y-%m-%d %H:%M:%S&quot; 按指定格式显示年月日时分秒 date &quot;+%Y-%m-%d&quot;年月日 date -s 字符串时间 设置日期 date -s &quot;2020- 11- 03 20:02:10&quot; 设置日期 cal显示当前月的日历 cal 2022 显示2022年日历 搜素查找类find 查找文件或目录find [搜索范围] [选项] name 按照指定的文件名查找模式查找文件 find /home -name hello.txt user 按照属于指定用户名所有文件 find /opt -user shelly size 按照指定的文件大小查找文件 +大于 -小于 不写 等于；单位k，M，G find / -size +200M locate 快速定位文件路径基于事先建立的文件名及路径数据库进行查询，无需遍历整个文件系统，速度较快。注意第一次查询前必须先使用updatedb指令创建locate数据库 which 查看指令所在目录which ls 显示ls所在目录 grep 过滤查找常与管道符号结合使用 -n 显示匹配行及行号 -i 忽略字母大小写 cat /home/shelly/hello.txt | grep -n &quot;yes&quot; 查找文件中的yes并显示行号 另一种方法： grep -n &quot;yes&quot; /home/shelly/hello.txt 压缩和解压gzip&#x2F;gunzip只能将文件压缩为*.gz文件 zip&#x2F;unzip压缩文件或者文件夹 zip -r shelly.zip /home/shelly 将shelly文件夹压缩 unzip -d /home/wuyn20/linux shelly.zip tar 打包指令打包生成*.tar.gz文件 -c creat产生.tar打包文件 tar格式仅仅打包，不压缩 -v verbose显示详细信息 -f filename指定压缩后的文件名 -z gzip算法 压缩或解压 -x extract解包.tar文件 tar -zcvf onemeow.tar.gz /home/wuyn20/hello.txt /home/shelly/ 将两个文件压缩为同一个 tar -zcvf shelly.tar.gz /home/ 将文件夹压缩 tar -zxvf home.tar.gz 将文件解压 将文件解压到指定目录下"},{"title":"本文专治不开心","date":"2022-10-21T09:49:40.000Z","url":"/2022/10/21/%E6%9C%AC%E6%96%87%E4%B8%93%E6%B2%BB%E4%B8%8D%E5%BC%80%E5%BF%83/","tags":[["喵言喵语","/tags/%E5%96%B5%E8%A8%80%E5%96%B5%E8%AF%AD/"]],"categories":[["喵眼看世界","/categories/%E5%96%B5%E7%9C%BC%E7%9C%8B%E4%B8%96%E7%95%8C/"]],"content":"主子赏脸，浅浅卖个小萌~ 搬运一点旧图。 图图点这里TBC"},{"title":"（待点亮的）技能树","date":"2022-10-18T02:11:10.000Z","url":"/2022/10/18/%E6%8A%80%E8%83%BD%E6%A0%91/","tags":[["广而告之","/tags/%E5%B9%BF%E8%80%8C%E5%91%8A%E4%B9%8B/"]],"categories":[[" ",""]],"content":" 8b6c8fa6c51832ae0d1bf08a6f94b509f53030da121fe0a6c2fa14fee542a04b5a1a1ab3456d39bbb889655cc24c9f957abaa283c578e275a517da2f00467a287adcd842760621609ff98b75891bb8bf7f35ef02abcac9dd22ca291f9114f0e5abff8531db9b7efc94203c2dfcda9704a620ea3a5dfd0de896632bce41f715e2cb5ec8c9fbe94bb77f4718242f054bcc059ca4029834110073c55c538c6f37211c87626b4145f61acb35643134eaf9f6e559fe2da32a5f2d9bc9c41dba3d62fe574ba2441243755c36d0a49dc642e0d9d9f96a526da9f6de4bcaab3b7593a3bfe680cc1219f6bf248a7b3bcb367f2a440648fa4b461dc4a2acbf6172b5ab048aa133eec739639a4386806d4698c282c38f54f8b57da4104e5423d8e62206618294eb4120335da3e2bbfe12265dcefdf4263ab9888987e9fe4031e1b52c77fa1fc23c401a831e9d513b8b005bd0112ba03d97e7cfac41eeb2446971ce8174fbde8c074be8d85a4bebc739acd19690acaf26036ef25f1f435437d218c1f91f077aea4d8bc09bd096ce13761be8a70486132196551367a0f1b43f2978141dd66ae98a49df7ca32e7de4d7b44867ff06d5fa9e536f1dffa70bd34adf835b1a321dde5bb6b487d5c6219b5d6d686ef15ec4f694a14487d98180438816a2ef97edbb83da5d57e90682266953066e5c241c50760ccf38ce8c03a32ff9a6fa24c860027be6e269183a7d3e803db7b5c82fc3013cf1453e2a42cf18587202731dec5743c8f22409414a801ba3a8546d0d80ee7efc491444c7aef1ed620dd64e79c5774b4c2a5228a4d339dd2ae5d528ae71cd06d0748a49e0a59625207ae28b783332ef9f4f0604e29a552d54a75fb65771011f675367f470078dd245be96ef0c800126abdb51ce319a082918edbd9e63a5cb3524bdb0f14b3bae7eeda32dd74790abbb8236bdebcaf168dacb171e09affa16b638a2e93ef3f7a86785d8b2fbcde6207ad1e7d2c9a2f6455a9ec61ae1da50c14aac45ccb09911d9f3a5eec6ef32052d4b0bad767dcfe77d2d060d005e36a6eb1ce582c619f80c98b2604f44da248126d8f6d2cb9c00a7a90e573df7298a3be32f053303951ab406c941b8baf2a97b543967301c9507e2d50540d78ff577e99d1712afe184d5600cdc132738ce7d00b621f41379b260a96c1367d6bed3e4a0c03a51cf5a7e42f4f2321599b311e305ca72060e96e2f8e3503a8fe5dd3a04db2cb066b3de28b2793a93a42a25ff30c2600aeaa452e8b514a6dd40b8a71143a92c18ef024bd231c913a74616cbaaae8077a3bc6dd7e9128f009d1a15594a0af51bb97157243c57dc9992e71c3563f34e2312b03164867befaa89eac6b911c3ddaf7e228e816dd35a9bf9a1eed8c59f73eb461ce836b940267d7a6afd07087d2e83c244c0c64a382a3ad462a1755f8eedb6c772f977503688ddbfb41d72d823df853b61e4d7eb912c8b2258747d0dc430fd3d099c5835efe79920c8c26795007cf78e8156c5a0196b369b7edf89fc85f58d0f8efa894290f2914f6a57d4b57580bbdb5c0925074d21da7913dc86dd9af11c86e80476460e4fc1506e16c09f13b51fbaf2dafb4a60728e9de3b37bbd22be02610877018fc623ee61b3f797b604f810bae0a7b4c113bab0b54f107e7a5afdacfcb69ead7440a321a06198ba7ae6e0bc863017bd08e2eb20a5d82a62d20fc57d362a9e8c1080627a4c1ca82b214e628cc518296d4966da99208c83b904ba61df7983f6254dfc258fa102752ecfeb5e443a26d9193b52d6dcfde73b0cb942fee5cdb7f581a2deeef0b34f390f0bca6264604fba8e1b31dd3e582dc66c1e11108f5127bfdac85b96dfefb356a570d5d67f915415b55bac84659df4e364ba71777e494e295417c4bc78863ad1f2c731e2fa927274bcc5ce89c36795be3e02d26561ea9553efef39cdb31aeb9c822f939503240d7033ee927a87ae7318cb977f096105633fef1580adf53d07836a8acc245084b07617f7ba86ea23a2cb450b5ee98f9f3a3b35832da35334aea9f047af9192f9386409f3b844c56c27aaefe234b62789a5203fdad19809de3cd0f41c18c71a12530eda4c45b3dbacea668303b1aa6fdcae70f0d66f7620dc6b342103f422a746c8278de691f7ab4827e1e6c6f64014c89775f59119bd6a7d7e760ae681ce89df63ade74969e7fcb2115110a87f7de2d97f19bc4dc297477a35d2c5c9bee77eefcc6363b19c863b1ed3a3ee73adcff6d582cb824e388d3a340bf140d5ab688532850ea6e774bdc92fbe1ba7cb66bb544ceaeed29bcfd2278466fd8c2426c609483407bef9eae02c0cd24fadfdc1163afa98494e8f9c18b1bc6d8b3c67607668ba7f4bb10409252e135c7e386aaf9d868b88acd6f98946eb4a5b6922c0d0b96f108b5753a4c332f778df6636b3af99ee9fa7c91b5a50b2d9d05f912d927fb046c616538a93028be1a962a99e31684bef06d178fa029a886ff28c7a104e76f063a64b4a3db3ee17ebb6885763904c40aed7b7e1cea0843848fc5981418727f5540c869d5a258c7191bc409113e96b188efe0f9c8b3c59fe609dffaa0b904a60ea7028f7702e3b06f0aa20cdbd2d5ded98cbcf0f2c748a886f6f2695daf035c4c74b59e2edf99abb08c490397672e64727143c368d62837b0228828affd0ea903ad79aa9a8fee1e0a986767c07a6b19e75c80f18d5390bee5410ea34b77c56939ef240f06be1d209c5669664cb5a56367ecdf596590ce3d78296d093cbdc336b7e37fb9c68ed9ddc2c25b1560c52343a8fab75f3bcefc62e98bbc2c2160caeb2dc8a8a33232be448d143071c00077558200477257187f42d781ebb62046f258a98d7930d4427c0a88ca9f34dc05b35dc04fd9f3f11a86590c4de6c99db9b21cebbcc93f0a78e4bba4f67c659ec6c7569e4bbfb7e158d912017a7221ef6f1565facdfb85d65ae679235af7d864b8a9a65a219a8aad70a343e7d0e84ff021730c8b03b0af761d1453ed2e9d0e8992527c9597c01c1962eb39ee1ea157dcd61f3f9b20b7502e41afc9dd3ffebf5bc1b67cbd8982a27b4609de8911766f36210e2669899d4107972251fa7afc09fafacf12fc1837b92db208b00717f7e804c37b28377de24f230f13c8fcf8fa5ec32b94a73fa7ee1d93e3570fe2a354b99a6d28e3d27603120682aece90662f30cffdb7e4429cda43e59f6ea0c46edc4963af366da502cbcb0a7642559353854fd52d7059bdc44d81c24f2847098e163ba95d567edb07fe8c5bada428f24ec6e7730c39eb4080f18b3ff72395bfcc93b7169fb7f27a93f7c2528bd525a40bc1a12835bac4e94410b366ba14a2f9b459b8238c84e002fd3ce187ca0e4ea7f2f436acd5fb9fd4395125fba7989f082ea4240c178ff20b043ff31cb5bd72e357fb859c4434a1890d908e828d8e06f0caae1f20432b11d5226ee430d6b9e4cbe454869a4d18a301309404bc5c87fff84987f544b76397d606cc4fdb602a4dc1879c5c5bbf49380dfa347804b91fb445f1ca1f5ffb2b0abc6f1ea4162e70ece8038ec74dc10f23838bf74f431f19701eabc4c732bf88d19ce758f25ad52ed6f9d712cdecd752f5d58c0473a90f7868540d04b09749a5efeafc0c0f2958c1fb691c3ca7875d2f7683cf83c86ecef125d0dcfa74e393ef37651dfb40732311229caec0fa90a8793c947a77084b2296ececf3e23f8bf13ed258634b07140ebefe16609865da8c69cb286fa9995677584882941d4a5561a9c52d078e145f6a4e2936b5cc15c15c38f27007447e832d0fc780fec197547b13e63e322203ec11906e518e0567c9c1bbb15be90adba40c46ccfbe728b45e5390d9559b1e2092956c109d6672afc137d5f3b936e587a61ba2cdadca7e2b0d0807ddb23e1b8361b0d7f9d986bcd14575d2759f646a331ce5f3f2448d2ad594b1f7f27c0cbe060276902011049f24f82e2b094a0eaf009c06484a670d10caf3fdf45eb428301d1f5f16412d067446233f1837cd424bcdac0b5175c6bfd631f88c030ecb0a3391ac7d8b33dd849fff78d59ef91e3668faf472e6dcaf9caab17f989921abe6f5a3863c7f48185513f540a74c1bb71f997fff500edb276564d9fc594ddf561e602b5108ff28a806914b1ab6b987fc984b9860fe72bd8161f230d66dd9f29282cbaf677b15e79ec35a29bdc9269b6ea9037 本文已隐藏，请输入密码 "},{"title":"unity材质渲染","date":"2022-10-18T01:44:07.000Z","url":"/2022/10/18/unity%E6%9D%90%E8%B4%A8%E6%B8%B2%E6%9F%93/","tags":[["shader","/tags/shader/"]],"categories":[["TA喵","/categories/TA%E5%96%B5/"]],"content":"以下内容源自庄懂老师的技术美术入门课教程 课程中的课件 关于shader forge的说明文档 不同的光线效果 兰伯特光照模型 半兰伯特光照模型 高光偏移 卡通渲染风格TBC"},{"title":"C语言debug留痕","date":"2022-10-18T01:26:10.000Z","url":"/2022/10/18/C%E8%AF%AD%E8%A8%80debug%E7%95%99%E7%97%95/","tags":[["debug血泪史","/tags/debug%E8%A1%80%E6%B3%AA%E5%8F%B2/"],["C/C++/C#","/tags/C-C-C/"]],"categories":[["码农喵","/categories/%E7%A0%81%E5%86%9C%E5%96%B5/"]],"content":"夏季小学期C语言程设大作业以下内容复制粘贴自已经提交的测试报告。 测试报告Randomize()函数 错误症状：输入答案过快时，会出现题目多次重复的情况。 原因分析：Randomize();函数是根据系统时间生成的，当输入过快时同一秒内生成的随机数完全一致，导致题目完全重复。 改正步骤：将Randonmize函数移至测试题循环部分之前，随机数在开始测试之时确定。 字符串的动态内存空间分配问题 错误症状1：编译通过，程序在运行到fscanf函数时中断报错，经过定位确定是其中的字符串有问题。 原因分析：给字符串数组_name[]的动态内存空间分配不足，因为_name[]数组本质上是char**类型，只分配一次动态内存无法确定内部的真实分配情况。 改正步骤：采用循环模式，对_name[][]中的每一个元素依次分配内存，传参时采用**二维数组_name[][NUM_OF_ELEMENTS]**的模式。 错误症状2：fscanf函数可以顺利运行，但是程序无法再次循环，dev c++的return value为3221226356。将关于_name逐层释放的free函数注释掉之后反而可以顺利运行。 原因分析：free函数逐层释放时，底层的空间已经被释放了，导致上层再释放时空间不足。 改正步骤：删除了逐层释放的部分，只采用了一级的free(_name)。 "},{"title":"躺平？躺不平","date":"2022-10-17T15:47:10.000Z","url":"/2022/10/17/%E8%BA%BA%E5%B9%B3%EF%BC%9F%E8%BA%BA%E4%B8%8D%E5%B9%B3/","tags":[["喵言喵语","/tags/%E5%96%B5%E8%A8%80%E5%96%B5%E8%AF%AD/"],["设计喵","/tags/%E8%AE%BE%E8%AE%A1%E5%96%B5/"]],"categories":[[" ",""]],"content":"本文又名———— 为设计熬夜的花样理由一喵又为设计熬夜了。 众所周知，熬夜有伤身体。众所周知，建筑设计离不开熬夜。众所周知，一喵决定转行，不想继续做设计… 一喵非常讨厌为设计熬夜，却又无力挣脱这个怪圈。传闻有一种说法是，反正设计课不会挂科，划水也能得个B+。此言大概不虚。只是躺平的姿势，对一喵来说，有点困难。 一谁没有年轻幼稚过？刚刚来到建筑系的一喵还是一个意气风发的少女，誓要设计出传承中国传统文化的精彩建筑，为家乡勾勒一条亮丽的城市天际线。对于熬夜，她不以为耻，反以为荣。大约应试教育宣传的天道酬勤、囊萤映雪之类在她心底留下了很深的印痕。建筑系独树一帜的教学体系对小镇做题家出身的一喵颇为新鲜。她在一片崭新的知识海域畅游许久，将提升个人的艺术审美能力作为课余时间的一大重要任务，为此四处观展，无论东西方文化、古典先锋流派都照单全收。若是遇到与课堂所学知识重合的地方，更是兴奋不已。她借着礼仪队队员的便利旁听了不少音乐会，也举着一台佳能60D游览了不少地方，练习摄影水平。 那时候的一喵不觉得自己差劲，非要说的话，就是遗憾于半途而废的乐器、书法，使她并无自我展示的特长。她带着与以往一样的学习热情投入建筑专业，几乎每时每刻都以建筑生自居，以建筑设计的眼光观察四周，并试图思考高深的哲学问题。 二但是，总有些东西是一喵单凭努力学习不来的。比如同学做出的形态构成，一喵知其好看却找不到思维逻辑的引线。就好像看见了远处美丽的皑皑雪山，却找不到登山的路。 努力不够，工具来凑。一喵擅长的东西大概只有学习。大一下老师上了一节课讲解sketchup的使用，熟练速度令人咂舌，大家听的云里雾里。于是乎，一喵找到网上教程，不光粗略掌握了su，还一口气学习了PS,AI,ID和rhino的操作方法，并在暑假乘胜追击，玩了一把grasshopper。这样做有用吗？似乎有用。rhino的界面显然比sketchup好看得多，而且两者不一样的体块生成逻辑也迫使一喵从更加接近构造的角度思考建筑的生成。 再后来，一喵看了更多教程，了解了CAD，学会了多软件配合出图的工作流。可是，她依然在熬夜。为了做出更好看的图，排出更好看的排版，但是又似乎永远赶不上别人的步伐。一喵有些疲惫了。 三大二上的前八周设计以及这一学期过于沉重的学业压力（主要是一喵不自量力选了32学分所致）着实耗干了一喵仅存不多的意志力。又兼建筑业不断萎靡，一个梦想改造家的项目引发众议，建筑突然变得虚无缥缈，仿若一张外表光鲜的遮羞布。她开始“摆烂”。 善良的老师在每一次设计课上总会提出几个明确的问题点，工作量有是有，但不那么大。如果听从老师的建议一步步改好，加入一点个人的小创意，做完设计并不困难。可是一喵陷入了一种兴许是抑郁又或许是拖延的情绪里，坐在工位上盯着电脑，却拖拖拉拉着不愿动工。她总是要在时日交界之时磨蹭着下定打开模型文件的决心，然后迷糊着做上整晚，在天光渐明的时分疲惫地返回宿舍。 这样做有什么意义吗？没有。一喵希望改变些什么，然而设计课前夜又是上一次的重演。好像只有在寂冷的夜晚，一喵才能够摆脱缠绕上身的焦躁与忧虑，让指尖在鼠标和键盘上沉默地移动。她暴躁地想，“行，就这样猝死好了”，倒在一个无人问津的早晨。可是身体明明那么脆弱却在关键时分又无比顽强，一喵意识到，所谓熬夜，原来是自我惩罚。 惩罚她的意气用事、惩罚她的不自量力、惩罚她没有其他人与生俱来的天赋与出身，也惩罚她自暴自弃地亏待自己的身体。与其说是夜晚给人安宁，不如说是那些在日光之下无处发泄的坏情绪，只在建馆的夜晚寻找到发泄的工具与出口，而一喵心甘情愿地缴械投降。 四好在这样的日子总会有一个或暂时或永久的终结。就像天真的孩子在意识到哭闹并不能换来糖果之后，只得归于安静的成熟。 一喵对设计失去了感情。她麻木地上着课，照样熬着夜不过尽量把频率降低，她把方案做到平均水平的进度，然后止步于此。她平静地略过学院中对设计依然热爱的同学，慕建筑之名而来的同学，决绝转系的同学，八面玲珑的同学，自信昂扬的同学，沉默寡言的同学，同她一样因迷惘而哭泣的同学。一喵想，我究竟归于何方？ 她慢慢失却了对消灭新冠病毒的信心，失却了参观与摄影的热情，失却了对出国交换的期待，失却了对纸片人“一往情深”的爱……她觉得自己是一个身心俱疲的旅客，困居异乡，但何处是乡？ 所以，一喵做了一次逃兵。她从“兵戈相接”的北京逃跑了，逃回了喵窝————那个她生活至成年的地方。从成绩上看，这并没有什么成效（不过也许情况否则会更糟）；然而一喵获得了久违的平静，一种来自心灵的平静。水中浮萍找到了依靠，这所谓的依靠并非什么特别之物，仅仅是水面稳定而恒久的浮力。但浮萍漂浮了太久，如果不是险些让它倾覆的漩涡，浮萍几乎忘记了浮力的存在。 不过既然浮萍知道了，它就可以勇敢地沿水流一直漂流下去了。 五这一次，一喵没有用社会实践、志愿服务、工作坊之类的活动填充她的暑假。她选择了学习那些她长久以来想要触碰却又心存畏惧的知识。学习之神（如果存在的话）所幸依然眷顾着她。她获得了一种已经告别很久的成就感，如同游戏闯关的快感，但并无游戏那样可能带来的罪恶。一喵终于知道了，在兜兜转转这么久之后，自己应该走向什么地方。 可一喵还是在为设计熬夜。她以敷衍了事的态度所完成的形态构成，意外得到了这次设计课老师的赞赏。“你的思维是比较立体的。空间想象能力不错。”一喵反而感到了几丝惭愧。善良的老师自然不知道，一喵之所以选择他，就是因为他并非建筑设计，或者说建筑“忽悠”方面的行家，设计课老师中的异类。 一喵喜欢这位第一节课就痛批建筑教育的、在故宫研究古建筑的老师，她不希望老师最后感到失望，这名他眼中“底子”还不错的同学在设计上只是平庸之辈，不过建筑作品的所谓好坏又如此主观，而且这位老师的建筑教育理念与一喵又颇相近。也许一喵“稍微”认真一点，就可以做出更好的设计呢？况且无论如何，一喵势必将在自己的（不管是转哪行的）作品集中放入一个亮眼的建筑设计作品，要是这一个能成… 好吧，在良心或者说利益的驱使下，一喵开始认真对待自己的设计方案了。只是事与愿违，她遵照老师的建议仔细研究了一番迈耶的建筑形式语言，然后被批评“用力过猛”；她担心交图时间来不及，便提前熬了一个通宵来把平面图排得细致周到，好让以后的工作轻松些，无奈却被点评“排得太满”，并且建议“平面图大改”……在这位老师身上，那些学生们习惯使用的疑似“内卷”的努力统统失效。也许，一喵想，她还是应该放松些。不过不管怎样，躺平，在她这里大概是永远不可能的了。"},{"title":"关于hexo的debug记录","date":"2022-10-15T08:29:08.000Z","url":"/2022/10/15/hexo%E7%9A%84debug%E8%AE%B0%E5%BD%95/","tags":[["debug血泪史","/tags/debug%E8%A1%80%E6%B3%AA%E5%8F%B2/"],["hexo","/tags/hexo/"]],"categories":[["码农喵","/categories/%E7%A0%81%E5%86%9C%E5%96%B5/"]],"content":"记录一下hexo配置中遇到的bug，选了一个不太热门的模板，而且对javascript一无所知，我哭。必应上一搜就能搜到的功能实现方法不会在这里补充。 文章置顶功能不知道是因为hexo版本更新过快还是什么其他的原因，所有的教程不是说要安装topindex的插件，就是要在generate.js文件中添加代码… 本人下载这个两年前的插件，但是报错了。很有可能是因为时间久远，没有人维护导致的。javascript我也不熟悉，因此不太想改动源文件，而且以后修改配置也会很麻烦。 这时我点开了对应位置中的readme文件，研究了一下里面的说明，发现只要在页面的Front-matter位置中添加sticky属性就可以了！没错，置顶的参数不是top，是sticky！sticky的数值越大，优先级越高。 以本人，噢不，本喵的告示牌为例： 中文显示乱码问题无论是哪一部分出现了中文乱码的问题，第一步优先考虑是源文件的编码 格式出错了。尤其是windows系统内写代码很容易出现这种错误。 检查编码格式最方便的办法就是用记事本打开，看左下角显示的是否为UTF-8。如果不是的话，那么就将文档另存为UTF-8格式，覆盖原文档即可。 tag plugins功能失灵当时被简洁好看的cards主题骗进来了…其中一个重要原因就是demo展示的很好看的标签外挂。然而我把说明文档中的内容复制粘贴之后没有任何效果。在尝试了各种办法之后，并且阅读了N遍hexo关于tag plugins的说明，我几乎快要放弃了，直到发现代码和我的理解似乎不太一样…好吧，终于调试成功了orz。解释一下我为什么会写错代码： 我误以为type必须放在[]之内。然而事实上是不需要的…不过不管怎样，all is well that ends well… 图床原本使用的是某免费图床，结果好巧不巧第二天就挂了…该不该说我运气太好了一点，本以为是政治因素，但发现其他图床都好好地存活着… anyway, 这一事件给了我教训，免费图床再好用说到底是存在人家的服务器里，不保险。而且万一有的图涉及版权就麻烦了。于是参照网上教程用自己的github账号搭建了一个个人图床，虽说可能访问速度会慢一点，不过起码方便我管理了。欧耶！"},{"title":"高亮测试","date":"2022-10-15T04:20:10.000Z","url":"/2022/10/15/%E9%AB%98%E4%BA%AE%E6%B5%8B%E8%AF%95/","categories":[[" ",""]],"content":"怎么没效果啊啊啊 终于有效果了，意满离。 content [author[source]] [link] [source_link_title] 广而告之公告牌及其他（如果有的话）。 喵薄荷是一喵最喜欢的味道啦~ 喵喵喵来自一喵的问候。 一喵的凝视危——— 喵！！！喵！ "},{"title":"建筑设计5-1","date":"2022-10-15T03:20:59.000Z","url":"/2022/10/15/%E5%BB%BA%E7%AD%91%E8%AE%BE%E8%AE%A15-1/","tags":[["喵言喵语","/tags/%E5%96%B5%E8%A8%80%E5%96%B5%E8%AF%AD/"],["设计喵","/tags/%E8%AE%BE%E8%AE%A1%E5%96%B5/"]],"categories":[["指点现代建筑","/categories/%E6%8C%87%E7%82%B9%E7%8E%B0%E4%BB%A3%E5%BB%BA%E7%AD%91/"]],"content":"记录此次设计课的大致过程。一方面回答外行人关于“设计课是怎么上课的？”的疑问，一方面也是方便本人知道接下来该干什么，不偏离最初的想法，以及…凑分析图（啊这是可以说的嘛）(ˉ▽ˉ；)… 简介 这是一个博物馆的设计。 主题和场地划定是小组讨论决定的。 组内五个人分成了甲方爸爸、建筑师、研究员、策展人、游客五种角色。 我是研究员！嘿嘿嘿~ 关于主题和场地说实话，研究员在这一块儿没什么话语权qwq 分析过程此处略去几百字，我就写一下大致情况好啦： 校内的表演艺术博物馆 包含舞台和展厅两种空间，展示表演艺术的诞生过程，也可以作为表演场地出租，主打实验剧场，与新清区别。 位于艺博和美院之间，现在是一块停车场。未来它会变成半块停车场和半块与艺博连为一体的绿地。 地下有一条连接艺博的密道。嘿嘿嘿，都挂着学校的名头，库房借用一下没关系吧~ 关于研究员在做些什么？不要指望一个半吊子研究员真的搞清楚了什么… 藏品的保管 预防性保护：光线、温湿度的控制，清洗除尘 研究藏品的材料、制作工艺，发现可能携带的“故事” 修复藏品的损伤，这里一定要确定修复的目的，或者说工作方向 学术研究交流：研讨会、写论文、参观各地 与策展人合作，展示研究成果 讲解员 关于本喵的设计方案最近有点忙，下回写…（猫咪怎么发出了咕咕咕的声音？） 哼，是为了知识产权保护啦！ 10.17更新 安全注意事项防火注意事项 设置防火分区，每个不超过1500平米 消防楼梯间，每层视情况而定 本设计中每层两个 功能分区大厅 雨具区 检票口 导览服务区 安保室 海报宣传 展陈空间 包含以下几个部分： 前言、剧本&#x2F;台词创作、舞美设计（舞台场景布置、服装、道具、灯光、音效…）、音乐（唱段）与乐团演奏、舞蹈设计 作为核心的表演空间，对标低配版的实验剧场…（比较复杂，后续再说） 赋予“起承转合”的寓意，与参观流线相配合 研究空间 研究、出版（办公室） 资料室（音像、图书阅览） 办公空间（研究空间旁） 行政办公室 会议室 接待室 设备机房 后勤空间 安保用房（大厅区域） 工作用餐厨房（？） 清洁间（置于卫生间内） 卫生间 根据规定，按参观人数200人计算，卫生间需要男性蹲位2个，小便池4个，洗手池2个，女性蹲位5个，洗手池3个。 藏品空间 库房，借用了艺博的，暂不考虑 周转室（临时存放展品） 半开放式库房（主要用于参观和研究） 商店 位于大厅空间，比较开放，可以入座休息 交通空间 对外：中间的环形楼梯和散布各处的消防楼梯间 对内：工作人员用客梯一架，货梯一架 展陈控制展品类型： 对光特别敏感：戏服、设计图、部分道具、海报、剧本等等。。。 比较敏感：舞台模型 不敏感：唱片 多媒体：影像记录 展品位置： 高度介于0.8~2.5米之间 人的观看距离1.5~2米 打光角度最好和垂直方向呈30° 光线、温湿度 led灯，节能、无紫外线 不同材质的展品不能放在相同的展柜中 考虑专设一个湿度控制严格的服装道具专区，一个无窗的播放多媒体的空间，其余空间可以引入自然光 演艺空间设计必要的功能区： 存衣间 化妆室 道具间 贵宾休息室 灯光、音响的器材间 候场区 技术用房（调音响、控制灯光等等） 位置就在入口大台阶底下好了 特殊考虑： 观众席座位高度， 需要计算确定前后座椅的高度差 双层隔声门，减少对展陈区域的噪音影响 顶棚高度调节，控制自然光和人工光线的输入 "},{"title":"本喵的告示牌","date":"2022-10-14T16:12:07.000Z","url":"/2022/10/15/%E6%9C%AC%E5%96%B5%E7%9A%84%E5%91%8A%E7%A4%BA%E7%89%8C/","tags":[["广而告之","/tags/%E5%B9%BF%E8%80%8C%E5%91%8A%E4%B9%8B/"]],"categories":[[" ",""]],"content":"喵喵喵？ 哼，别看猫咪总是一脸高冷的样子，其实它也会寻求陪伴与共鸣的。 人也一样。 咳好吧，正经开场。难免会有些话想说又无处可说，希望在某处留下飞鸿半爪。原本觉得个人公众号是最好的选择，可惜我已经注册过一个用于公务了。微博？总是莫名其妙地限流、验证，评论区乌泱泱的人群不知是真是假。QQ空间？人情关系成为畅所欲言的阻碍。难免担心一些想法会打扰到他人，带给人惊诧：你竟然是这样的人么？至于其他平台，比如小红书、贴吧之类，一来没有吸引我的价值，二来我希望把自己的言论开放在相对可控的范围内，不必担心什么飞来横祸————毕竟流量时代，已经很少有人有耐心倾听另一个人的观点了。 我认为自己有必要把平时的胡思乱想记录下来，只是觉得这样可以更好地审视自己，把逻辑梳理得更加清晰，把意识表达得更加清楚。同时，这也是对自己观点的尊重。毕竟，如果我扼住了自己的喉咙，还有谁会知道我究竟是怎么想的呢？而且，我愿意拥抱互联网带来的新生事物，比起纸制品，我可以更加方便地搜索写过的内容，避免重复，也便于整理回看。 一喵是什么？一喵这个代号取自我养的一只猫，但或许很难说清“一喵”究竟是什么。你会在这个blog中各种各样的文章里看到这个名字。 在大多数情况下，它象征着一段人类意识的集合。文字的表述和读者的解读会给一喵赋予不同的内容。对于笔者而言，选择一喵是为了从第三人称的视角书写，这种状态一如“吾日三省吾身”中的“吾”。内在意识的混杂与冲突在这个过程中被简化了，与其说一喵是我，不如说它更像我的一个切片。切片以外一定也存在着其他或相似或矛盾的意识，而一喵的作用就是把我希望记录的内容放大————好像越说越像载玻片了。 这里有什么？就像猫在陌生的环境中往往紧张而带有攻击性，但总有一个温暖的小窝可以让它放松地翻个身，大剌剌地展示自己的白肚皮。那么这里对一喵来说大概就是一个可以露肚皮晒太阳的地方。 放在第一位的一定是我，最想要说的话。 这里也许会存放一些奇怪的想法，也许是一点对时事的评论，也许包含比较情绪化的表达，不过，我只写我真正想说的。在一个资本控制媒体、流量为王、极端化思想泛滥的时代里，我要捍卫我表达的权力，同时也是告诉所有那些浏览到这里的人，这里有一个想法不太一样的人。我会尽力避免词不达意的情况。如果你机缘巧合之下看到了这里，而且非常巧合地感受到了一点共鸣，欢迎留言或者私信，我会非常高兴的。当然，如果你有任何不同的想法，也可以提出与我交流，我喜欢思想碰撞的火花。 当然，作为个人博客，也必然存在其他的内容。比如一些莫名其妙的脑洞，一些敝帚自珍的作品，又或者仅仅是学习的自我勉励和监督。 最后很开心你看到了这里，那么就用一喵最喜欢的方式向这位客人表示欢迎吧。 喵呜~~~ 封面图素材来源："},{"title":"MARKDOWN学习记录","date":"2022-10-14T12:43:21.000Z","url":"/2022/10/14/MARKDOWN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/","categories":[[" ",""]],"content":"一级标题二级标题三级标题四级标题五级标题六级标题列表格式 文本1 文本2 文本3 有序列表格式 带序号的文本1 文本2 文本3 链接格式五道口技校 图片格式也可以这样![][1][1]:  引用格式 西山苍苍，东海茫茫。苟利国家生死以，岂因祸福避趋之。 粗体、斜体、删除西山苍苍，东海茫茫。苟利国家生死以，岂因祸福避趋之。喵呜 代码引用一行代码Hello world 多行代码 表格 左对齐 居中 右对齐 appple banana cake one two three eins zwei drei 一 二 三 "},{"title":"Hello World","date":"2022-10-14T12:26:11.930Z","url":"/2022/10/14/hello-world/","categories":[[" ",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"},{"title":"标签页","date":"2022-10-15T03:00:00.000Z","url":"/tags/","categories":[[" ",""]],"content":"info ] 广而告之公告牌及其他（如果有的话）。 important ] 喵薄荷是一喵最喜欢的味道啦~ tip ] 喵喵喵来自一喵的问候。 caution ] 一喵的凝视危———— warning ] 喵！！！喵！ "},{"title":"search","date":"2022-10-15T04:30:46.000Z","url":"/search/","categories":[[" ",""]],"content":"内容搜索"}]